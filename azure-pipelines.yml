# trigger:
# - main
trigger:
  branches:
    exclude:
      - main


pool:
  vmImage: ubuntu-latest

variables:
  dockerRegistryServiceConnection: 'docker-svc1'  # Replace with your Docker Hub service connection name

stages:
- stage: BuildAndPackage
  jobs:
  - job: BuildAndPackage
    steps:
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        mavenOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.8'
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        goals: 'clean package'
    
    - task: Docker@2
      inputs:
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: 'shwetha12712712/spring-db-cicd'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        
    - task: CopyFiles@2
      inputs:
        Contents: '**/*.yaml'
        TargetFolder: '$(build.artifactstagingdirectory)'
        
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'




# - stage: DeployToAks
#   jobs:
#   - job: Init  # This is a dummy job with no dependencies
#     steps:
#     - script: echo "Initializing AKS deployment job"
#       displayName: 'Initialize AKS Deployment'

#   - job: BuildAndPackage  # Corrected job name to match the one in the BuildAndPackage stage
#     steps: []

#   - job: Deploy
#     dependsOn: BuildAndPackage  # Now it correctly depends on the BuildAndPackage job
#     steps:
#     - checkout: none
#     - task: Kubernetes@1
#       inputs:
#         connectionType: 'Kubernetes Service Connection'
#         kubernetesServiceEndpoint: 'aks-svc'
#         namespace: 'shwe'
#         command: 'apply'
#         arguments: '-f $(Build.ArtifactStagingDirectory)/drop'


# - task: Kubernetes@1
#   inputs:
#     connectionType: 'Kubernetes Service Connection'
#     kubernetesServiceEndpoint: 'aks-svc'
#     namespace: 'shwe'
#     command: 'apply'
#     arguments: '-f $(Build.ArtifactStagingDirectory)/drop'

# - stage: Deploy
#   displayName: Deploy stage
#   dependsOn: BuildAndPackage
#   jobs:
#   - deployment: Deploy
#     displayName: Deploy job
    # pool:
    #   vmImage: $(vmImageName)
    # environment: 'myenv.aksnamespace' #customize with your environment
    # strategy:
    #   runOnce:
    #     deploy:
    #       steps:
    #       - task: DownloadPipelineArtifact@2
    #         inputs:
    #           artifactName: 'drop'
    #           downloadPath: '$(Build.ArtifactStagingDirectory)/drop'

    #       - task: KubernetesManifest@0
    #         displayName: Deploy to Kubernetes cluster
    #         inputs:
    #           action: deploy
    #           namespace: shwe
    #           manifests: |
    #             $(Build.ArtifactStagingDirectory)/drop/*.yaml
      
- stage: Deploy
  displayName: Deploy stage
  dependsOn: BuildAndPackage
  jobs:
  - job: Deploy
    displayName: Deploy job
    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        artifactName: 'drop'
        downloadPath: '$(Build.ArtifactStagingDirectory)/drop'

    - task: KubernetesManifest@0
      displayName: Deploy to Kubernetes cluster
      inputs:
        action: deploy
        kubernetesServiceConnection: 'aks-svc'
        namespace: shwe
        manifests: |
          $(Build.ArtifactStagingDirectory)/drop/*.yaml
        

